// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserInfo.API.DbContexts;

#nullable disable

namespace UserInfo.API.Migrations
{
    [DbContext(typeof(UserInfoContext))]
    [Migration("20220316182133_DataSeed")]
    partial class DataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserInfo.API.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PointsOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The latest .Net",
                            Name = "DotNet6",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "The latest Android",
                            Name = "Andorid12",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Reusable web components.",
                            Name = "StencilJS",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "TypeScript is a strongly typed programming language that builds on JavaScript.",
                            Name = "TypeScript",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Designed to load test functional behavior and measure performance.",
                            Name = "JMeter",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "Open source record and playback test automation for the web.",
                            Name = "Selenium IDE",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("UserInfo.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Passionate backend guy.",
                            Name = "Sandeep Kandula"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Passionate backend guy.",
                            Name = "Kiran"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Passionate testing guy.",
                            Name = "Sanjeev"
                        });
                });

            modelBuilder.Entity("UserInfo.API.Entities.PointOfInterest", b =>
                {
                    b.HasOne("UserInfo.API.Entities.User", "User")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserInfo.API.Entities.User", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
